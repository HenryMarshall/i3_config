# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4


###### INITIALIZATION ######

# font for window titles. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

# make wallpaper gray
exec --no-startup-id xsetroot -solid "#333333"

# launch nework manager applet
exec --no-startup-id nm-applet

# create a terminal named scratchKonsole and send to the scratchpad
exec terminator -name scratch_term; [instance="scratch_term"] move scratchpad

###### LAUNCH/KILL CLIENTS ######

# kill focused client
bindsym $mod+Shift+Delete kill

# start k4-dmenu-desktop (a better program launcher)
bindsym $mod+BackSpace exec --no-startup-id j4-dmenu-desktop --dmenu="dmenu -i -l 20"

mode "launcher" {
  # launch commonly used apps
  bindsym y exec qalculate; mode "default"
  bindsym n exec terminator; mode "default"
  bindsym e exec firefox; mode "default"
  bindsym i exec subl; mode "default"
  bindsym o exec google-chrome; mode "default"
  bindsym k exec vlc; mode "default"
  bindsym , exec krusader; mode "default"
  bindsym . exec ktorrent; mode "default"

  # i3 commands
  bindsym Shift+Q exec quit
  bindsym w exec restart
  bindsym f exec reload
  bindsym p exec i3lock

  # Return to default mode without selecting anything
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+Shift+BackSpace mode "launcher"

# launch mapper
bindsym $mod+F2 exec --no-startup-id terminator -T "Mapper" --command="python ~/.i3/bin/i3_mapper.py"
for_window [instance="terminator" title="Mapper"] floating enable

###### CLIENT FOCUS ######

# change focus
bindsym $mod+a focus left
bindsym $mod+r focus up
bindsym $mod+s focus down
bindsym $mod+t focus right

# focus the parent container
bindsym $mod+Shift+P focus parent

# focus the child container
# bindcode $mod+b focus child


###### CLIENT ARRANGEMENT ######

# move focused window
bindsym $mod+Shift+a move left
bindsym $mod+Shift+r move up
bindsym $mod+Shift+s move down
bindsym $mod+Shift+t move right

# change container layout (horizontal, vertical stacked, tabbed, default)
bindsym $mod+shift+Q split h
bindsym $mod+shift+W split v
bindsym $mod+shift+F layout stacking
bindsym $mod+shift+P layout tabbed
bindsym $mod+shift+G layout default

workspace_layout tabbed


###### CLIENT MANIPULATION ######

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+w floating toggle

# change focus between tiling / floating windows
bindsym $mod+f focus mode_toggle

# enter fullscreen mode for the focused container
bindsym $mod+g fullscreen

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Respectively: shrink h; shrink v; grow v; grow h
    bindsym a resize shrink width 3 px or 3 ppt
    bindsym r resize shrink height 3 px or 3 ppt
    bindsym s resize grow height 3 px or 3 ppt
    bindsym t resize grow width 3 px or 3 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+b mode "resize"


###### SCRATCHPAD ######

# Move focused cliend to scratchpad
bindsym $mod+F3 move scratchpad

# Retrieve next scratchpad window
bindsym $mod+F4 scratchpad show

# Retrieve terminator
# bindsym $mod+F2 [instance="scratch_term"] scratchpad show

# Make a new terminator with instance "scratch_term" because you closed it
# bindsym $mod+Shift+F2 exec terminator -name scratch_term



###### SCREENS ######

# 20140712 - quad head

# must use xinerama for unknown reasons. my nvidia drivers 331.20 should support
# randr, but benefits are minimal as this machine will never hot-swap displays
force_xinerama yes

# stored in variables to ease switching to randr
# displays are DVI-I-2; DVI-I-3; DVI-I-1; VGA-0 respectively
set $screen0 xinerama-0
set $screen1 xinerama-1
set $screen2 xinerama-2
set $screen3 xinerama-3

# move WORKSPACES to screens
bindsym $mod+z move workspace to output $screen0
bindsym $mod+x move workspace to output $screen1
bindsym $mod+c move workspace to output $screen2
bindsym $mod+v move workspace to output $screen3

# move CLIENTS to screens
bindsym $mod+shift+Z move container to output $screen0
bindsym $mod+shift+X move container to output $screen1
bindsym $mod+shift+C move container to output $screen2
bindsym $mod+shift+V move container to output $screen3

# for moving specific workspaces to specific screens see: workspaces


###### WORKSPACES ######

# focus adjacent workspace on screen
bindsym $mod+Shift+Tab workspace prev_on_output
bindsym $mod+Tab workspace next_on_output

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
bindsym $mod+n workspace w:ter
bindsym $mod+e workspace w:ff
bindsym $mod+i workspace w:sub
bindsym $mod+o workspace w:ref
bindsym $mod+l workspace p:fun
bindsym $mod+u workspace p:bet
bindsym $mod+y workspace p:shop
bindsym $mod+apostrophe workspace p:ref
bindsym $mod+k workspace a:vlc
bindsym $mod+m workspace a:music
bindsym $mod+comma workspace a:file
bindsym $mod+period workspace a:dl
bindsym $mod+slash workspace a:mail

# move focused container to workspace
bindsym $mod+Shift+exclam move container to workspace 1
bindsym $mod+Shift+at move container to workspace 2
bindsym $mod+Shift+numbersign move container to workspace 3
bindsym $mod+Shift+dollar move container to workspace 4
bindsym $mod+Shift+percent move container to workspace 5
bindsym $mod+Shift+asciicircum move container to workspace 6
bindsym $mod+Shift+ampersand move container to workspace 7
bindsym $mod+Shift+asterisk move container to workspace 8
bindsym $mod+Shift+parenleft move container to workspace 9
bindsym $mod+Shift+parenright move container to workspace 10
bindsym $mod+Shift+N move container to workspace w:ter
bindsym $mod+Shift+E move container to workspace w:ff
bindsym $mod+Shift+I move container to workspace w:sub
bindsym $mod+Shift+O move container to workspace w:ref
bindsym $mod+Shift+L move container to workspace p:fun
bindsym $mod+Shift+U move container to workspace p:bet
bindsym $mod+Shift+Y move container to workspace p:shop
bindsym $mod+Shift+quotedbl move container to workspace p:ref
bindsym $mod+Shift+k move container to workspace a:vlc
bindsym $mod+Shift+m move container to workspace a:music
bindsym $mod+Shift+comma move container to workspace a:file
bindsym $mod+Shift+period move container to workspace a:dl
bindsym $mod+Shift+slash move container to workspace a:mail

# put work workspaces on appropriate outputs
bindsym $mod+F5 workspace w:ff; move workspace to output $screen2; workspace w:ter; move workspace to output $screen3; workspace w:ter; move workspace to output $screen0; workspace w:sub; move workspace to output $screen1

# flipped work outputs
bindsym $mod+Shift+F5 workspace w:ff; move workspace to output $screen0; workspace w:ter; move workspace to output $screen1; workspace w:ter; move workspace to output $screen3; workspace w:sub; move workspace to output $screen2

# flop workspaces vertically between screens
bindsym $mod+d exec /home/henry/.i3/scripts/flip_screens.rb
bindsym $mod+Shift+D exec /home/henry/.i3/scripts/flip_screens.rb --single-column


###### i3 COMMANDS ######

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+Escape restart

# reload the configuration file
# bindsym $mod+Shift+Tab reload

# exit i3 (logs you out of your X session)
bindsym $mod+Control+Escape exit


###### i3 SETTINGS ######

# Border colors - dark red, dark blue, grey, orange respectively
# class                 border  backgr. text    indicator
client.focused          #8F000E #A80011 #ffffff #A80011
client.focused_inactive #4c7899 #285577 #ffffff #285577
client.unfocused        #333333 #222222 #888888 #222222
client.urgent           #C99700 #FFBF00 #ffffff #FFBF00


###### i3bar settings ######

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)


bar {
    tray_output $screen0
    output $screen0
    output $screen1
    position top
    status_command i3status
}

bar {
    output $screen2
    output $screen3
    position bottom
    status_command i3status
}
